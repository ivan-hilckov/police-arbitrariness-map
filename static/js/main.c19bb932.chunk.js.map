{"version":3,"sources":["components/Department/icon.svg","components/App/App.module.css","components/Offence/Offence.tsx","components/DetailsDialog/DetailsDialog.tsx","components/District/District.tsx","components/Department/Department.tsx","components/Map/Map.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","offenceLabelFromOffenceType","passport","violence","policeCar","phone","pressure","food","medicine","fingers","lawyer","detentionTime","protocol","journalist","Offence","offenceType","offencesCount","allOffencesCount","key","style","marginBottom","animate","value","intent","DetailsDialog","title","isOpen","onClose","address","description","offences","className","Classes","DARK","icon","autoFocus","canEscapeKeyClose","canOutsideClickClose","enforceFocus","usePortal","DIALOG_BODY","overflow","maxHeight","marginTop","Object","keys","map","layerPaint","layerPaintHover","District","coordinates","district","useState","setIsOpen","hover","setHover","type","paint","onClick","onMouseEnter","getCanvas","cursor","onMouseLeave","NAME","ABBREV","styles","width","height","transition","hoveredIcon","filter","Department","department","src","alt","name","ReactMapboxGlMap","ReactMapboxGl","accessToken","values","reduce","acc","undefined","Map","center","zoom","containerStyle","districts","features","index","departmentOfDistrict","departments","find","properties","districtOKATO","OKATO","offencesOfDistrict","geometry","App","app","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c19bb932.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.5467ecd9.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1IksY\"};","import React from 'react'\nimport { ProgressBar, H6 } from '@blueprintjs/core'\n\nconst offenceLabelFromOffenceType: { [key: string]: string } = {\n  passport: 'Отнимают паспорт',\n  violence: 'Применение силы',\n  policeCar: 'Долго держат в автозаке',\n  phone: 'Отнимают телефон',\n  pressure: 'Оскорбления и угрозы',\n  food: 'Не дают пить и есть',\n  medicine: 'Не оказывают медицинскую помощь',\n  fingers: 'Заставляют делать дактилоскопию по административному задержанию',\n  lawyer: 'Не пускают адвокатов',\n  detentionTime: 'Превышают время задержания',\n  protocol: 'Заставляют подписать ложный протокол',\n  journalist: 'Задержали журналиста',\n}\n\nconst Offence: React.FC<{\n  offenceType: string\n  offencesCount: number\n  allOffencesCount: number\n}> = ({ offenceType, offencesCount, allOffencesCount }) => (\n  <div\n    key={offenceType}\n    style={{\n      marginBottom: '10px',\n    }}\n  >\n    <H6 style={{ marginBottom: '5px' }}>{`${offenceLabelFromOffenceType[offenceType]}: ${offencesCount}`}</H6>\n    <ProgressBar animate={false} value={offencesCount / allOffencesCount} intent=\"danger\" />\n  </div>\n)\n\nexport default Offence\n","import React from 'react'\nimport { Classes, Dialog, IOverlayableProps, H3, H4, Text } from '@blueprintjs/core'\nimport Offence from '../Offence/Offence'\n\ninterface IDetailsDialog {\n  isOpen: boolean\n  onClose?: IOverlayableProps['onClose']\n  title: string\n  address?: string\n  description: string\n  offences?: {\n    [key: string]: number\n  }\n  allOffencesCount?: number\n}\n\nconst DetailsDialog: React.FC<IDetailsDialog> = ({\n  title,\n  isOpen,\n  onClose,\n  address,\n  description,\n  offences,\n  allOffencesCount,\n}) => (\n  <Dialog\n    className={Classes.DARK}\n    icon=\"info-sign\"\n    title={title}\n    isOpen={isOpen}\n    onClose={onClose}\n    autoFocus\n    canEscapeKeyClose\n    canOutsideClickClose\n    enforceFocus\n    usePortal\n  >\n    <div className={Classes.DIALOG_BODY} style={{ overflow: 'auto', maxHeight: '75vh' }}>\n      {address && <H3>{address}</H3>}\n      <Text>{description}</Text>\n      {offences && allOffencesCount ? (\n        <>\n          <H4 style={{ marginTop: '15px' }}>Нарушения</H4>\n          {Object.keys(offences).map(offenceType => (\n            <Offence\n              key={offenceType}\n              offenceType={offenceType}\n              offencesCount={offences[offenceType]}\n              allOffencesCount={allOffencesCount}\n            />\n          ))}\n        </>\n      ) : (\n        <H4>Нарушений нет</H4>\n      )}\n    </div>\n  </Dialog>\n)\n\nexport default DetailsDialog\n","import React, { useState } from 'react'\nimport { Layer, Feature } from 'react-mapbox-gl'\nimport DetailsDialog from '../DetailsDialog/DetailsDialog'\nimport { IDistrict } from '../../interfaces'\n\nconst layerPaint = {\n  'fill-outline-color': 'rgba(255, 0, 0, 1)',\n  'fill-color': 'rgba(255, 0, 0, 0.2)',\n  'fill-opacity': 0.75,\n}\nconst layerPaintHover = {\n  'fill-outline-color': 'rgba(255, 0, 0, 1)',\n  'fill-color': 'rgba(255, 0, 0, 0.6)',\n  'fill-opacity': 0.75,\n}\n\nconst District: React.FC<{\n  coordinates: number[][][] | number[][][][]\n  district: IDistrict\n  offences?: {\n    [key: string]: number\n  }\n  allOffencesCount?: number\n}> = ({ coordinates, district, offences, allOffencesCount }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [hover, setHover] = useState(false)\n\n  const onCloseClick = () => {\n    setIsOpen(false)\n  }\n\n  const onFeatureClick = () => {\n    setIsOpen(true)\n  }\n\n  const onLayerMouseEnter = ({ map }: any) => {\n    map.getCanvas().style.cursor = 'pointer'\n    setHover(true)\n  }\n\n  const onLayerMouseLive = ({ map }: any) => {\n    map.getCanvas().style.cursor = ''\n    setHover(false)\n  }\n\n  return (\n    <>\n      <Layer type=\"fill\" paint={hover ? layerPaintHover : layerPaint}>\n        <Feature\n          coordinates={coordinates}\n          onClick={onFeatureClick}\n          onMouseEnter={onLayerMouseEnter}\n          onMouseLeave={onLayerMouseLive}\n        />\n      </Layer>\n      <DetailsDialog\n        title={`${district.NAME} Округ`}\n        isOpen={isOpen}\n        onClose={onCloseClick}\n        description={district.ABBREV}\n        offences={offences}\n        allOffencesCount={allOffencesCount}\n      />\n    </>\n  )\n}\n\nexport default District\n","import React, { useState } from 'react'\nimport { Marker } from 'react-mapbox-gl'\n\nimport DetailsDialog from 'components/DetailsDialog/DetailsDialog'\nimport { IDepartment } from 'interfaces'\nimport icon from './icon.svg'\n\nconst styles: { [key: string]: React.CSSProperties } = {\n  icon: {\n    width: 50,\n    height: 50,\n    cursor: 'pointer',\n    transition: 'all 0.3s',\n  },\n  hoveredIcon: {\n    width: 50,\n    height: 50,\n    cursor: 'pointer',\n    transition: 'all 0.3s',\n    filter: 'invert(1)',\n  },\n}\n\nconst Department: React.FC<{\n  coordinates: number[]\n  department: IDepartment\n  allOffencesCount?: number\n}> = ({ coordinates, department, allOffencesCount }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [hover, setHover] = useState(false)\n\n  const onFeatureClick = () => setIsOpen(true)\n  const onCloseClick = () => setIsOpen(false)\n  const onLayerMouseEnter = () => setHover(true)\n  const onLayerMouseLive = () => setHover(false)\n\n  return (\n    <>\n      <Marker\n        coordinates={coordinates}\n        onClick={onFeatureClick}\n        onMouseEnter={onLayerMouseEnter}\n        onMouseLeave={onLayerMouseLive}\n      >\n        <img src={icon} style={hover ? styles.hoveredIcon : styles.icon} alt={department.name} />\n      </Marker>\n      <DetailsDialog\n        title={department.name}\n        isOpen={isOpen}\n        onClose={onCloseClick}\n        description={department.description}\n        address={department.address}\n        offences={department.offences}\n        allOffencesCount={allOffencesCount}\n      />\n    </>\n  )\n}\n\nexport default Department\n","import React from 'react'\nimport ReactMapboxGl from 'react-mapbox-gl'\nimport District from 'components/District/District'\nimport Department from 'components/Department/Department'\nimport districts from 'data/districts.json'\nimport departments from 'data/departments.json'\nimport { IDepartment, IDistrict, IFeature } from 'interfaces'\n\nconst ReactMapboxGlMap = ReactMapboxGl({\n  accessToken: 'pk.eyJ1Ijoic3RyYW5nZW1vbGUiLCJhIjoiY2o4b3RicGp1MDhqNTMycDEyYm85M3B6OSJ9.EEOG8yH_YtIyLmuHv8zc4g',\n})\n\nconst offencesOfDistrict = (district: IFeature<IDistrict>) => {\n  const departmentOfDistrict = departments.features.find(\n    (department: IFeature<IDepartment>) => department.properties.districtOKATO === district.properties.OKATO\n  )\n  return departmentOfDistrict ? departmentOfDistrict.properties.offences : undefined\n}\n\nconst offencesCount = (offences?: { [key: string]: number }) => {\n  return offences ? Object.values(offences).reduce((acc, offencesCount) => acc + offencesCount, 0) : undefined\n}\n\nconst Map = () => (\n  <ReactMapboxGlMap\n    center={[37.49050140380859, 55.555048994867036]}\n    zoom={[9]}\n    style=\"mapbox://styles/mapbox/streets-v9\" //eslint-disable-line\n    containerStyle={{ height: '100vh', width: '100vw' }}\n  >\n    <>\n      {districts.features.map((district, index) => {\n        const offences = offencesOfDistrict(district)\n        return (\n          <District\n            key={`district-${index}`}\n            coordinates={district.geometry.coordinates}\n            district={district.properties}\n            offences={offences}\n            allOffencesCount={offencesCount(offences)}\n          />\n        )\n      })}\n      {departments.features.map((department, index) => (\n        <Department\n          key={`department-${index}`}\n          coordinates={department.geometry.coordinates}\n          department={department.properties}\n          allOffencesCount={offencesCount(department.properties.offences)}\n        />\n      ))}\n    </>\n  </ReactMapboxGlMap>\n)\n\nexport default Map\n","import React from 'react';\nimport Map from 'components/Map/Map'\nimport styles from './App.module.css';\n\nconst App: React.FC = () => {\n  return (\n    <div className={styles.app}>\n      <Map />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport 'normalize.css/normalize.css'\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css'\nimport '@blueprintjs/core/lib/css/blueprint.css'\nimport './index.css'\n\nimport App from 'components/App/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}